{"version":3,"sources":["modules/Header.js","modules/Footer.js","modules/to-do-list.js","app.js","index.js"],"names":["Header","Footer","HooksToDoList","useState","items","setItems","assignedTo","setAssignedTo","useEffect","console","log","length","document","title","onSubmit","e","preventDefault","target","reset","onChange","value","className","type","min","max","map","item","key","app","Fragment","enrtyPoint","getElementById","ReactDom","render"],"mappings":"2MAUeA,EARA,WACb,OACE,gCACE,qDCGSC,EANA,WACb,OACE,iF,cCiEWC,MAjEf,WAA0B,IAAD,EAEYC,mBAAS,GAFrB,gCAOGA,mBAAS,KAPZ,mBAOhBC,EAPgB,KAOTC,EAPS,OAQaF,mBAAS,IARtB,mBAQhBG,EARgB,KAQJC,EARI,OASQJ,mBAAS,IATjB,mBA2CvB,OA3CuB,UA0BvBK,qBAAU,WACRC,QAAQC,IAAI,6BAIdF,qBAAU,WACRC,QAAQC,IAAI,eAAgBN,KAC3B,CAACA,IAGJI,qBAAU,WACJJ,EAAMO,QAAQ,EAAKC,SAASC,MAAQ,WACjCD,SAASC,MAAQ,eACvB,CAACT,IAKF,iCACE,0BAAMU,SA3BO,SAACC,GAChBA,EAAEC,iBACFD,EAAEE,OAAOC,QACTZ,GAAcD,EAAS,GAAD,mBAAKD,GAAL,CAAYE,OAyB9B,sDACE,2BAAOa,SApCS,SAACJ,GACvBR,EAAcQ,EAAEE,OAAOG,WAqCnB,+DACE,2BAAOC,UAAU,MAAMC,KAAK,QAAQC,IAAI,IAAIC,IAAI,QAGpD,sCAEIpB,EAAMqB,KAAI,SAAAC,GAAI,OACZ,uBAAGC,IAAKD,GAAOA,S,MC1CZE,MAVf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCN,IAAMC,EAAalB,SAASmB,eAAe,QAC3CC,IAASC,OAAO,mBAVhB,WACE,OACE,kBAAC,IAAMJ,SAAP,KACE,kBAAC,EAAD,SAOU,MAAUC,I","file":"static/js/main.b4f0d92e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1> To-Do-Application </h1>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>React Hooks API - To Do List @ Nawal Suliman</footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n// hook useState ( build-in )\nimport { useState, useEffect } from 'react';\n\nfunction HooksToDoList() {\n\n  const [difficulty,setDifficulty] = useState(0);\n\n  // set status if complete or incomplete \n  // const [status, setStatus] = useState('complete');\n\n  const [items, setItems] = useState([]);\n  const [assignedTo, setAssignedTo] = useState('');\n  const [itemName,setItemName] = useState('');\n\n  const _changeAssigned = (e) => {\n    setAssignedTo(e.target.value);\n  }; // end of _changeAssigned\n\n  const _diff = (e) => {\n    setDifficulty(e.target.value);\n  };\n  const _addItem = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    assignedTo && setItems([...items, assignedTo]);\n  }; // end of _addItem\n    \n  /****************************************************** Use Effect ***********************************************/\n  // for each render \n  useEffect(() => {\n    console.log('Welcome @ To Do List  ');\n  });\n\n  // for assignedTo \n  useEffect(() => {\n    console.log('Item Name : ', items);\n  }, [items]);\n\n  // for status \n  useEffect(() => {\n    if (items.length>=1) { document.title = 'Complete'; }\n    else { document.title = 'Incomplete'; }\n  }, [items]);\n\n\n  /****************************************************** Rendering ***********************************************/\n  return (\n    <section>\n      <form onSubmit={_addItem}>\n        <p> Enter Item To Do List : \n          <input onChange={_changeAssigned}></input> \n        </p>\n        <p> Set Difficulty ( from 1 to 5 ) :\n          <input className=\"dif\" type=\"range\" min=\"1\" max=\"5\"></input>\n        </p>\n      </form>\n      <p> Items :\n        {\n          items.map(item => \n            <p key={item}>{item}</p>\n          )\n        }\n      </p>\n    </section>\n  );\n\n} // end of HooksToDoList function\n\nexport default HooksToDoList;","import React from 'react';\nimport Header from './modules/Header.js';\nimport Footer from './modules/Footer.js';\nimport ToDoList from './modules/to-do-list.js';\n\nimport './app.scss';\n\n\nfunction app() {\n  return (\n    <React.Fragment>\n      <Header />\n      <ToDoList />\n      <Footer />\n    </React.Fragment>\n  );\n} // end of app function \n\nexport default app;","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './app.js';\n\nfunction Entry(){\n  return (\n    <React.Fragment>\n      <App/>\n    </React.Fragment>\n  );\n  \n} // end of Entry Function \n\nconst enrtyPoint = document.getElementById('root');\nReactDom.render(<Entry />,enrtyPoint);"],"sourceRoot":""}